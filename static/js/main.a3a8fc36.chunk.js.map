{"version":3,"sources":["components/ButtonList.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonList","color","text","onAdd","showAdd","Button","type","style","float","width","onClick","variant","defaultProps","Header","title","location","useLocation","Row","display","alignItems","Col","pathname","Footer","className","to","taskStyle","Task","task","onDelete","onToggle","cursor","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","Form","onSubmit","e","preventDefault","alert","Group","controlId","Label","Control","value","onChange","target","Check","checked","label","currentTarget","block","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","userSelect","Container","Card","Body","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3a8fc36.chunk.js","sourcesContent":["import { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonList = ({ color, text, onAdd, showAdd }) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"button\"\r\n        style={{ float: \"right\", width: \"50%\" }}\r\n        onClick={onAdd}\r\n        variant={showAdd ? \"danger\" : color}\r\n      >\r\n        {showAdd ? \"Close\" : text}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButtonList.defaultProps = {\r\n  color: \"danger\",\r\n  text: \"Danger\",\r\n};\r\n\r\nButtonList.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ButtonList;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonList from \"./ButtonList\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header>\r\n      <Row style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Col>\r\n          <h4>{title}</h4>\r\n        </Col>\r\n        <Col>\r\n          {location.pathname === \"/\" && (\r\n            <ButtonList\r\n              onAdd={onAdd}\r\n              showAdd={showAdd}\r\n              color=\"success\"\r\n              text=\"Add\"\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// CSS in JS\r\n// const headerStyle = {\r\n//   color: \"red\",\r\n//   backgroundColor: \"black\",\r\n// };\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"text-center\">\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to=\"/about\">About</Link>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { FaTimes } from \"react-icons/fa\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      style={{ cursor: \"pointer\" }}\r\n      className={`py-2 px-4 m-2 rounded border ${\r\n        task.reminder ? taskStyle : \"border-light bg-light\"\r\n      } `}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <Row style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Col>\r\n          <label className=\"lead\">{task.text}</label>\r\n        </Col>\r\n        <Col>\r\n          <FaTimes\r\n            style={{ color: \"red\", cursor: \"pointer\", float: \"right\" }}\r\n            onClick={() => onDelete(task.id)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst taskStyle = \"border-success bg-none\";\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n          key={task.id}\r\n          task={task}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Form.Group controlId=\"formBasicText\">\r\n        <Form.Label>Task:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicText\">\r\n        <Form.Label>Day & Time:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Label>Set Reminder:</Form.Label>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          label=\"Check me out\"\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </Form.Group>\r\n      <Button type=\"submit\" variant=\"primary\" block>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to=\"/\">Go Back</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // console.log(task);\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: \"DELETE\" });\n    // console.log(\"delete\", id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    // console.log(id);\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        // task.id === id ? { ...task, reminder: !task.reminder } : task\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ userSelect: \"none\" }}>\n        <Container className=\"w-50\">\n          <Card className=\"m-5\">\n            <Card.Header>\n              <Header\n                title=\"Naz Task Tracker App\"\n                onAdd={() => setShowAddTask(!showAddTask)}\n                showAdd={showAddTask}\n              />\n            </Card.Header>\n            <Card.Body>\n              <Route\n                path=\"/\"\n                exact\n                render={(props) => (\n                  <>\n                    {showAddTask && <AddTask onAdd={addTask} />}\n                    {tasks.length > 0 ? (\n                      <Tasks\n                        tasks={tasks}\n                        onDelete={deleteTask}\n                        onToggle={toggleReminder}\n                        className=\"m-4 p-4\"\n                      />\n                    ) : (\n                      \"No Tasks to Show\"\n                    )}\n                  </>\n                )}\n              />\n              <Route path=\"/about\" component={About} />\n              <Footer />\n            </Card.Body>\n          </Card>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}